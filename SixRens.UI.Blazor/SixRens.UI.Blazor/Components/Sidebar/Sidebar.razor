<div class="SiderBar">
	<div>
		<button @onclick="async () => await OnTitleClicked.InvokeAsync()">六壬吾心</button>
	</div>
	@foreach(var group in cases)
	{
		<text>@group.Key</text>
		foreach(var c in group)
		{
			<SidebarUnit CaseName="@(c.name)" OnSelected="async () => await OnCaseSelected.InvokeAsync(c.id)"/>
		}
	}
	<button class="Add" @onclick="Open">+</button>
</div>

<dialog open="@ShowDialog">
		<p>打开文件</p>
		<form method="dialog">
			<input type="file" class="file"/>
			<button class="AddFile" @onclick="Close">添加</button>
		</form>
</dialog>

@inject SixRens.UI.Blazor.Services.DivinationCaseStorager.DivinationCaseStorager storager
@code {
	private IEnumerable<IGrouping<string, (long id, string name)>> cases 
		= Array.Empty<IGrouping<string, (long id, string name)>>();

	private bool ShowDialog = false;
	
	[Parameter]
	public EventCallback OnTitleClicked { get; set; }

	[Parameter]
	public EventCallback<long> OnCaseSelected { get; set; }

	protected override async Task OnInitializedAsync()
	{
		var cases = await storager.ListCases();
		this.cases = cases.GroupBy(c => c.group, c => (c.id, c.name));
	}

	private void Open()
	{
		ShowDialog = true;
	}

	private void Close()
	{
		ShowDialog = false;
	}
}
