<div>
	@foreach(var c in cases)
	{
		<SiderBar_Unit CaseName="@(c.name)" OnSelected="async () => await OnCaseSelected.InvokeAsync(c.id)"/>
	}
	<div>
		<button @onclick="Open">+</button>
	</div>
</div>

<dialog open hidden="@ShowDialog">
	<p>打开文件</p>
	<form method="dialog">
		<InputFile class="file"></InputFile>
		<button @onclick="Close">添加</button>
	</form>
</dialog>

@inject SixRens.UI.Blazor.Services.DivinationCaseStorager.DivinationCaseStorager storager
@code {
	private IEnumerable<(long id, string name)> cases = Array.Empty<(long, string)>();

	private bool ShowDialog = false;

	[Parameter]
	public EventCallback<long> OnCaseSelected { get; set; }

	protected override async Task OnInitializedAsync()
	{
		this.cases = await storager.ListCases();
	}

	private void Open()
	{
		ShowDialog = true;
	}

	private void Close()
	{
		ShowDialog = false;
	}
}
