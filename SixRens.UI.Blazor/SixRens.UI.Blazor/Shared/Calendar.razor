    <div class="datetime">
        <p> 西历：@western </p>
        <p> 农历：@lunar </p> 
        <p> @(periodLeader)旬 @(missing)空</p>
        <p> @previousTerm </p>
        <p> @nextTerm </p>
    </div>
    <div class="SiKe">
        <div class="SiKe-Unit">
            <p class="SiKe-Title">年</p>
            <p class="SiKe-Date"> @stemOfYear </p>
            <p class="SiKe-Date"> @branchOfYear </p>
        </div>
        <div class="SiKe-Unit">
            <p class="SiKe-Title">月</p>
            <p class="SiKe-Date"> @stemOfMonth </p>
            <p class="SiKe-Date"> @branchOfMonth </p>
        </div>
        <div class="SiKe-Unit">
            <p class="SiKe-Title">日</p>
            <p class="SiKe-Date"> @stemOfDate </p>
            <p class="SiKe-Date"> @branchOfDate </p>
        </div>
        <div class="SiKe-Unit">
            <p class="SiKe-Title">时</p>
            <p class="SiKe-Date"> @stemOfTime </p>
            <p class="SiKe-Date"> @branchOfTime </p>
        </div>
    </div>

@implements IDisposable

@code {
    private string western = "";
    private string lunar = "";

    private string stemOfYear = "";
    private string branchOfYear = "";
    private string stemOfMonth = "";
    private string branchOfMonth = "";
    private string stemOfDate = "";
    private string branchOfDate = "";
    private string stemOfTime = "";
    private string branchOfTime = "";
    private string periodLeader = "";
    private string missing = "";
    private string previousTerm = "";
    private string nextTerm = "";

    private System.Timers.Timer timer = new System.Timers.Timer(200) {
            AutoReset = true
        };

    private void UpdateCalendar(DateTime time){
        Lunar lunar = new Lunar(time);
        western = $"{time:yyyy-MM-dd HH:mm:ss}";

        var eightChar = lunar.getEightChar();
        eightChar.setSect(1);
        stemOfYear = eightChar.getYearGan();
        branchOfYear = eightChar.getYearZhi();
        stemOfMonth = eightChar.getMonthGan();
        branchOfMonth = eightChar.getMonthZhi();
        stemOfDate = eightChar.getDayGan();
        branchOfDate = eightChar.getDayZhi();
        stemOfTime = eightChar.getTimeGan();
        branchOfTime = eightChar.getTimeZhi();

        periodLeader = eightChar.getDayXun();
        missing = eightChar.getDayXunKong();

        this.lunar = $"{lunar.getYearInGanZhi()}年{lunar.getMonthInChinese()}月{lunar.getDayInChinese()}";

        previousTerm = $"{lunar.getPrevJieQi(true).getName()} {lunar.getPrevJieQi(true).getSolar().toYmdHms()}";
        nextTerm = $"{lunar.getNextJieQi(true).getName()} {lunar.getNextJieQi(true).getSolar().toYmdHms()}";
        StateHasChanged();
    }

    protected override Task OnInitializedAsync()
    {
        UpdateCalendar(DateTime.Now);

        timer.Elapsed += (_, _) => UpdateCalendar(DateTime.Now);
        timer.Start();

        return base.OnInitializedAsync();
    }

    public void Dispose()
    {
        this.timer.Dispose();
    }
}
